name: Deploy API

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up AWS SAM
        uses: aws-actions/setup-sam@v1

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Define env vars [prod]
        run: |
          echo "S3_BUCKET=${AWS_S3_BUCKET}" >> $GITHUB_ENV
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          echo "API_URL=api.forcepu.sh" >> $GITHUB_ENV
          echo "CERT_ARN=${AWS_CERT_ARN}" >> $GITHUB_ENV
        env:
          AWS_S3_BUCKET: ${{ secrets.HYPERDRIVE_BUCKET }}
          AWS_CERT_ARN: ${{ secrets.CERT_ARN }}
        if: ${{ github.ref == 'refs/heads/master' }}

      - name: Define env vars [dev]
        run: |
          echo "S3_BUCKET=${AWS_S3_BUCKET}" >> $GITHUB_ENV
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          echo "API_URL=api.dev.forcepu.sh" >> $GITHUB_ENV
          echo "CERT_ARN=${AWS_CERT_ARN}" >> $GITHUB_ENV
        env:
          AWS_S3_BUCKET: ${{ secrets.HYPERDRIVE_DEV_BUCKET }}
          AWS_CERT_ARN: ${{ secrets.DEV_CERT_ARN }}
        if: ${{ github.ref != 'refs/heads/master' }}

      - name: Create parameters.env
        uses: SpicyPizza/create-envfile@v1.2
        with:
          envkey_S3Bucket: ${{ env.S3_BUCKET }}
          envkey_Environment: ${{ env.ENVIRONMENT }}
          envkey_ApiUrl: ${{ env.API_URL }}
          envkey_CertArn: ${{ env.CERT_ARN }}
          directory: src/api
          file_name: parameters.env

      - name: Build API
        run: npm run build:api

      - name: Deploy prod API
        run: npm run deploy:api
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: ${{ github.ref == 'refs/heads/master' }}

      - name: Deploy dev API
        run: npm run deploy-dev:api
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: ${{ github.ref != 'refs/heads/master' }}
