name: Deploy API

on:
  pull_request:
    paths:
      - src/api/**
    branches: [master]
  push:
    paths:
      - src/api/**
    branches: [master]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up AWS SAM
        run: util/install_sam.sh || util/upgrade_sam.sh

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest coverage boto3 requests pandas pynamodb stripe jinja2 numpy cryptography

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --ignore=F405,W503,W504,E721 --max-complexity=10 --max-line-length=127 --statistics

      - name: Run all unit tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          S3_BUCKET: ${{ secrets.HYPERDRIVE_DEV_BUCKET }}
          TABLE_NAME: users-local
          TEST: true
          STAGE: dev
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          SALT: salt
          CRYPT_PASS: password
          EMIT_SECRET: secret
          SIGNAL_EMAIL: ${{ secrets.SIGNAL_EMAIL }}
          STRIPE_WEBHOOK_SECRET: secret
          STRIPE_PRICE_ID: ${{ secrets.DEV_STRIPE_PRICE_ID }}
          STRIPE_SECRET_KEY: ${{ secrets.DEV_STRIPE_SECRET_KEY }}
        run: npm run test:api+db

      - name: Create parameters.env
        env:
          EmailUser: ${{ secrets.EMAIL_USER }}
          SignalEmail: ${{ secrets.SIGNAL_EMAIL }}
          EmailPass: ${{ secrets.EMAIL_PASS }}
          StripePriceId: ${{ fromJSON(format('[{0},{1}]', secrets.DEV_STRIPE_PRICE_ID, secrets.STRIPE_PRICE_ID)) }}
          # [github.ref_name == 'master'] }}
        run: |
          echo StripePriceId="${StripePriceId}"

      # - name: Build API
      #   run: npm run build:api

      # - name: Deploy API [prod]
      #   run: npm run deploy:api
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   if: ${{ github.ref_name == 'master' }}

      # - name: Deploy API [dev]
      #   run: npm run deploy-dev:api
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   if: ${{ github.ref_name != 'master' }}
