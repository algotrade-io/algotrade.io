AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  S3Bucket:
    Type: "String"
    NoEcho: true
  Stage:
    Type: "String"
    AllowedValues:
      - dev
      - prod
  ApiUrl:
    Type: "String"
    AllowedValues:
      - api.dev.forcepu.sh
      - api.forcepu.sh
  CertArn:
    Type: "String"
    NoEcho: true
  HostedZoneId:
    Type: "String"
    NoEcho: true
  UserPoolArn:
    Type: "String"
    NoEcho: true
  StripeSecretKey:
    Type: "String"
    NoEcho: true
  StripeWebhookSecret:
    Type: "String"
    NoEcho: true
  StripePriceId:
    Type: "String"
    NoEcho: true
  EmailUser:
    Type: "String"
    NoEcho: true
  EmailPass:
    Type: "String"
    NoEcho: true
  Salt:
    Type: "String"
    NoEcho: true
  CryptPass:
    Type: "String"
    NoEcho: true
  EmitSecret:
    Type: "String"
    NoEcho: true

Globals:
  Function:
    Timeout: 30
    MemorySize: 4096

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Domain:
        DomainName: !Ref ApiUrl
        CertificateArn: !Ref CertArn
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneId: !Ref HostedZoneId
      Auth:
        Authorizers:
          CognitoAuth:
            UserPoolArn: !Ref UserPoolArn
  AccountFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          TABLE_NAME: !Ref UsersTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      PackageType: Image
      Events:
        GetAccount:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /account
            Method: get
            RestApiId: !Ref ApiGatewayApi
            Auth:
              Authorizer: CognitoAuth
              # header Authorization: id_token from /token endpoint
        PostAccount:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /account
            Method: post
            RestApiId: !Ref ApiGatewayApi
            Auth:
              Authorizer: CognitoAuth
              # header Authorization: id_token from /token endpoint
        Options:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /account
            Method: options
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: account/Dockerfile
      DockerContext: ./
      DockerTag: python3.8-v1
  ContactFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          EMAIL_USER: !Ref EmailUser
          EMAIL_PASS: !Ref EmailPass
      #     TABLE_NAME: !Ref UsersTable
      # Policies:
      #   - DynamoDBCrudPolicy:
      #       TableName: !Ref UsersTable
      PackageType: Image
      Events:
        PostContact:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /contact
            Method: post
            RestApiId: !Ref ApiGatewayApi
            Auth:
              Authorizer: CognitoAuth
              # header Authorization: id_token from /token endpoint
        Options:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /contact
            Method: options
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: contact/Dockerfile
      DockerContext: ./
      DockerTag: python3.8-v1
  ExerciseLogFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Events:
        ExerciseLog:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /exercise_log
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./gym
      DockerTag: python3.8-v1
  PreviewFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
      Policies:
        - Statement:
            - Sid: S3ReadPolicy
              Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${S3Bucket}/data/api/*"
      PackageType: Image
      ImageConfig:
        Command: ["app.get_preview"]
      Events:
        Preview:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /preview
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./preview
      DockerTag: python3.8-v1
  ModelFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
      Policies:
        - Statement:
            - Sid: S3ReadPolicy
              Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${S3Bucket}/models/latest/metadata.json"
      PackageType: Image
      ImageConfig:
        Command: ["app.get_model"]
      Events:
        Model:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /model
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./model
      DockerTag: python3.8-v1
  VisualizationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
      Policies:
        - Statement:
            - Sid: S3ReadPolicy
              Effect: Allow
              Action:
                - s3:GetObject
              Resource:
                [
                  !Sub "arn:aws:s3:::${S3Bucket}/models/latest/2D/*",
                  !Sub "arn:aws:s3:::${S3Bucket}/models/latest/3D/*",
                ]
      PackageType: Image
      ImageConfig:
        Command: ["app.get_visualization"]
      Events:
        Model:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /visualization
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./model
      DockerTag: python3.8-v1
  SignalsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
          TABLE_NAME: !Ref UsersTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - Statement:
            - Sid: S3ReadPolicy
              Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${S3Bucket}/models/latest/signals.csv"
      PackageType: Image
      Events:
        Signals:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /signals
            Method: get
            RestApiId: !Ref ApiGatewayApi
        Options:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /signals
            Method: options
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: signals/Dockerfile
      DockerContext: ./
      DockerTag: python3.8-v1
  PlansFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          STRIPE_SECRET_KEY: !Ref StripeSecretKey
          TABLE_NAME: !Ref UsersTable
          STRIPE_PRICE_ID: !Ref StripePriceId
      PackageType: Image
      ImageConfig:
        Command: ["app.get_plans"]
      Events:
        GetPlans:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /plans
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: subscribe/Dockerfile
      DockerContext: ./
      DockerTag: python3.8-v1
  SubscribeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          STRIPE_SECRET_KEY: !Ref StripeSecretKey
          STRIPE_WEBHOOK_SECRET: !Ref StripeWebhookSecret
          TABLE_NAME: !Ref UsersTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      PackageType: Image
      ImageConfig:
        Command: ["app.post_subscribe"]
      Events:
        PostSubscribe:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /subscribe
            Method: post
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: subscribe/Dockerfile
      DockerContext: ./
      DockerTag: python3.8-v1
  NotifyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          SALT: !Ref Salt
          CRYPT_PASS: !Ref CryptPass
          EMIT_SECRET: !Ref EmitSecret
          TABLE_NAME: !Ref UsersTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      PackageType: Image
      ImageConfig:
        Command: ["app.post_notify"]
      Events:
        PostNotify:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /notify
            Method: post
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: notify/Dockerfile
      DockerContext: ./
      DockerTag: python3.8-v1
  CheckoutFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          STRIPE_SECRET_KEY: !Ref StripeSecretKey
          TABLE_NAME: !Ref UsersTable
          STRIPE_PRICE_ID: !Ref StripePriceId
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      PackageType: Image
      ImageConfig:
        Command: ["app.handle_checkout"]
      Events:
        PostCheckout:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /checkout
            Method: post
            RestApiId: !Ref ApiGatewayApi
            Auth:
              Authorizer: CognitoAuth
              # header Authorization: id_token from /token endpoint
        Options:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /checkout
            Method: options
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: subscribe/Dockerfile
      DockerContext: ./
      DockerTag: python3.8-v1
  BillingFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          STRIPE_SECRET_KEY: !Ref StripeSecretKey
          TABLE_NAME: !Ref UsersTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      PackageType: Image
      ImageConfig:
        Command: ["app.handle_billing"]
      Events:
        PostBilling:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /billing
            Method: post
            RestApiId: !Ref ApiGatewayApi
            Auth:
              Authorizer: CognitoAuth
              # header Authorization: id_token from /token endpoint
        Options:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /billing
            Method: options
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: subscribe/Dockerfile
      DockerContext: ./
      DockerTag: python3.8-v1
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "users-${Stage}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
        - AttributeName: api_key
          AttributeType: S
        - AttributeName: customer_id
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: api_key_index
          KeySchema:
            - AttributeName: api_key
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: customer_id_index
          KeySchema:
            - AttributeName: customer_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
