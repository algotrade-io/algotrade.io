AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
# add API w cloudwatch write role and custome domain to template
Parameters:
  S3Bucket:
    Type: "String"
    NoEcho: true
  Environment:
    Type: "String"
    NoEcho: true
  ApiUrl:
    Type: "String"
    NoEcho: true
  CertArn:
    Type: "String"
    NoEcho: true

Globals:
  Function:
    Timeout: 30
    MemorySize: 4096
# add custom domain to apigateway, need condition or if exp, add secrets to gh, update params in api.yml, reference parameters here
# specify stackname, s3 bucket, image repo in build and deploy cmds
# use dev npm cmds in api.yml and use environment in parameters.env, delete dev parameter
# keep using hyperdrive prod bucket for now
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      Domain:
        DomainName: !Ref ApiUrl
        CertificateArn: !Ref CertArn
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneName: !Ref ApiUrl
  ExerciseLogFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Events:
        ExerciseLog:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /exercise_log
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./gym
      DockerTag: python3.8-v1
  PreviewFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
      Policies:
        - Statement:
            - Sid: S3ReadPolicy
              Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${S3Bucket}/data/api/*"
      PackageType: Image
      ImageConfig:
        Command: ["app.get_preview"]
      Events:
        Inference:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /preview
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./home
      DockerTag: python3.8-v1
