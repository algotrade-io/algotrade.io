AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  S3Bucket:
    Type: "String"
    NoEcho: true
  Stage:
    Type: "String"
    AllowedValues:
      - dev
      - prod
  ApiUrl:
    Type: "String"
    AllowedValues:
      - api.dev.forcepu.sh
      - api.forcepu.sh
  CertArn:
    Type: "String"
    NoEcho: true
  HostedZoneId:
    Type: "String"
    NoEcho: true
  Region:
    Type: "String"
    NoEcho: true
  IdentityPoolId:
    Type: "String"
    NoEcho: true
  UserPoolId:
    Type: "String"
    NoEcho: true
  WebClientId:
    Type: "String"
    NoEcho: true
  OAuthDomain:
    Type: "String"
    NoEcho: true

Globals:
  Function:
    Timeout: 30
    MemorySize: 4096

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Domain:
        DomainName: !Ref ApiUrl
        CertificateArn: !Ref CertArn
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneId: !Ref HostedZoneId
  ExerciseLogFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Events:
        ExerciseLog:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /exercise_log
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./gym
      DockerTag: python3.8-v1
  AuthConfigFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          ENV: !Ref Stage
          AWS_DEFAULT_REGION: !Ref Region
          IDENTITY_POOL_ID: !Ref IdentityPoolId
          USER_POOL_ID: !Ref UserPoolId
          WEB_CLIENT_ID: !Ref WebClientId
          OAUTH_DOMAIN: !Ref OAuthDomain
      PackageType: Image
      Events:
        AuthConfig:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /auth
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./auth
      DockerTag: python3.8-v1
  PreviewFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
      Policies:
        - Statement:
            - Sid: S3ReadPolicy
              Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${S3Bucket}/data/api/*"
      PackageType: Image
      ImageConfig:
        Command: ["app.get_preview"]
      Events:
        Inference:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /preview
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./home
      DockerTag: python3.8-v1
  # CognitoUserPool:
  #   Type: AWS::Cognito::UserPool
  #   Properties:
  #     UserPoolName: !Ref CognitoUserPoolName
  #     Policies:
  #       PasswordPolicy:
  #         MinimumLength: 8
  #     UsernameAttributes:
  #       - email
  #     Schema:
  #       - AttributeDataType: String
  #         Name: email
  #         Required: false
  # CognitoUserPoolClient:
  #   Type: AWS::Cognito::UserPoolClient
  #   Properties:
  #     UserPoolId: !Ref CognitoUserPool
  #     ClientName: !Ref CognitoUserPoolClientName
  #     GenerateSecret: false
