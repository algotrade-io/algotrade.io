AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  S3Bucket:
    Type: "String"
    NoEcho: true
  Stage:
    Type: "String"
    AllowedValues:
      - dev
      - prod
  ApiUrl:
    Type: "String"
    AllowedValues:
      - api.dev.forcepu.sh
      - api.forcepu.sh
  CertArn:
    Type: "String"
    NoEcho: true
  HostedZoneId:
    Type: "String"
    NoEcho: true

Globals:
  Function:
    Timeout: 30
    MemorySize: 4096

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Domain:
        DomainName: !Ref ApiUrl
        CertificateArn: !Ref CertArn
        EndpointConfiguration: EDGE
        Route53:
          HostedZoneId: !Ref HostedZoneId
  ExerciseLogFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Events:
        ExerciseLog:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /exercise_log
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./gym
      DockerTag: python3.8-v1
  PreviewFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Environment:
        Variables:
          S3_BUCKET: !Ref S3Bucket
      Policies:
        - Statement:
            - Sid: S3ReadPolicy
              Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub "arn:aws:s3:::${S3Bucket}/data/api/*"
      PackageType: Image
      ImageConfig:
        Command: ["app.get_preview"]
      Events:
        Inference:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /preview
            Method: get
            RestApiId: !Ref ApiGatewayApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./home
      DockerTag: python3.8-v1
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AliasAttributes:
        # how users login
        - email
      AutoVerifiedAttributes:
        # how users verify their accounts
        - email
      EnabledMfas:
        # TOTP MFA
        - SOFTWARE_TOKEN_MFA
      MfaConfiguration:
        - OPTIONAL
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true
          Mutable: false

        - AttributeDataType: String
          Name: name
          Required: true
          Mutable: true

        - AttributeDataType: String
          Name: picture
          Required: false
          Mutable: true

        - AttributeDataType: String
          Name: phone_number
          Required: false
          Mutable: true

        - AttributeDataType: String
          Name: birthdate
          Required: false
          Mutable: true

        - AttributeDataType: String
          Name: profile
          Required: false
          Mutable: true
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: !Sub "forcepush-${Stage}"
      UserPoolTags:
        Env: !Ref Stage

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
        - aws.cognito.signin.user.admin
      CallbackURLs:
# get output refs for user pool and client
# and use for /auth lambda
# USE THIS (DependsOn:)
# https://stackoverflow.com/questions/44503800/how-to-export-cognito-user-pool-settings-to-cloudformation-template

# https://stackoverflow.com/questions/63924712/how-to-reference-the-output-of-one-nested-sam-application-from-another-applicati
# https://www.reddit.com/r/aws/comments/be0ici/pass_cloudform_variables_to_lambda/
# https://georgemao.medium.com/amazon-cognito-automation-with-cloudformation-is-kind-of-tricky-heres-a-quick-example-65bdc61d39f7
#     UserPoolId: !Ref CognitoUserPool
#     ClientName: !Ref CognitoUserPoolClientName
#     GenerateSecret: false
